
- cloudfront
- s3 buckets
- route53
- load balancers
- policies
- security groups
  - main
  - rds
- rds
- austoscaling Groups
- EC2
  - WordPress
  - vault
  - Apache
- IAM Roles

- bastion
    - https://aws.amazon.com/blogs/security/securely-connect-to-linux-instances-running-in-a-private-amazon-vpc/
    - SSH Tunnel

- rds
      - https://www.terraform.io/docs/providers/aws/r/db_instance.html
      - https://medium.com/@devopslearning/100-days-of-devops-day-21-mysql-rds-database-creation-using-terraform-278eeaff339f


Lecture Notes Guidelines
1) Create S3 buckets
2) Create Cloudfront Distribution
3) Create Security Groups  (web, rds)
4) Provision RDS
5) Create IAM S3 Role
6) Provision EC2 instances
7) Install WordPress
8) Migrate website code and media to S3 Buckets
9) Setup Cloudfront S3 buckets
10) Sync EC2 with S3 Bucket
11) Tell Apache to allow URL rewrites
12) Update S3 bucket policy
13) Create Load balancer, Target Groups, Launch Configurations, ASG
14) Setup Route53


TO_DO_TODAY
*Setup for Sydney Region - Create User, Keys, update ENV and .aws
*create another ansible pull
*s3 Bucket creation Sydney - Media Assets, Ansible_Roles, Wordpress_Code, TF_State
*Delete S3 for previous US region
*Apache Ansible Role

*Setup Cloudfront OAI to S3 bucket

*Host Header routing explanation and diagram
*Security Group Diagram

*Go through each resource and look at other options to use
*Fix alb health check

*AWS RDS IAM Authentication -> not using passwords

*SSL diagram local development
*Certificate Manager
*Security Drawings

*setup ENV variables for cred throughout all code i.e. wordpress, aws etc

*Harden Bastion

*Dev Ops Theory https://rangle.io/blog/what-is-devops-and-why-you-should-care/
