---

- name: Install package
  apt:
    name:
      - software-properties-common

# Move apache files to S3 Bucket
- name: Compress directory
  archive:
    path:
      - "{{ www_dir }}/*"
      - "{{ www_dir }}/.*"
    dest: "/{{ dest_dir }}/{{ backup_file }}"

- name: get Vault aws secret credentials
  set_fact:
    aws_cred: "{{ lookup('hashi_vault', 'secret=secret/aws token={{ vault_token }} url={{ vault_server }} validate_certs=false') }}"

- name: put web server files in s3 bucket
  aws_s3:
    aws_access_key: "{{ aws_cred.AWS_ACCESS_KEY_ID }}"
    aws_secret_key: "{{ aws_cred.AWS_SECRET_ACCESS_KEY }}"
    bucket: "{{ s3_bucket_backup }}"
    object: "/{{ www_prefix }}/{{ backup_file }}"
    src: "/{{ dest_dir }}/{{ backup_file }}"
    mode: put

# move images to s3 bucket used for cloudfront
- name: put web images in S3 bucket
  s3_sync:
    aws_access_key: "{{ aws_cred.AWS_ACCESS_KEY_ID }}"
    aws_secret_key: "{{ aws_cred.AWS_SECRET_ACCESS_KEY }}"
    bucket: "{{ s3_bucket_media }}"
    file_root: "{{ www_dir }}/wp-content/uploads"

# backup db and move to s3 bucket
- name: "Adding percona repository"
  apt_repository:
    repo: "deb http://repo.percona.com/apt {{ ansible_distribution_release }} main"
    update_cache: yes
    state: "present"
  become: true

- name: install percona
  apt:
    name: "percona-xtrabackup-80"
    state: present

- name: perform percona backup
  command: "xtrabackup --backup --user={{ perc_user }} --password={{ perc_pass }} --datadir={{ mysql_dir }} --target-dir={{ percona_target_dir }}"
  become: true

- name: put percona backup files in s3 bucket
  s3_sync:
    aws_access_key: "{{ aws_cred.AWS_ACCESS_KEY_ID }}"
    aws_secret_key: "{{ aws_cred.AWS_SECRET_ACCESS_KEY }}"
    bucket: "{{ s3_bucket_backup }}"
    file_root: "{{ percona_target_dir }}"
    key_prefix: "{{ db_prefix }}"
